name:                QFeldspar
version:             0.1.0.0
synopsis:            QFeldspar: a QDSL front-end for MiniFeldspar
homepage:            https://github.com/shayan-najd/QFeldspar
license:             GPL-3
license-file:        LICENSE
author:              Shayan Najd
maintainer:          sh dot najd att ed dot ac dot uk
category:            Language
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10

library
  ghc-options: -Wall -fno-warn-orphans
  default-extensions:
     NoMonomorphismRestriction,
     PolyKinds,
     DataKinds,
     ConstraintKinds,
     TypeOperators,
     TypeFamilies,
     GADTs,
     FlexibleInstances,
     FlexibleContexts,
     StandaloneDeriving,
     DeriveFoldable,
     DeriveFunctor,
     DeriveTraversable,
     DeriveDataTypeable,
     DeriveGeneric,
     NoUndecidableInstances,
     MonoLocalBinds,
     ScopedTypeVariables,
     MultiParamTypeClasses,
     ImplicitParams,
     TemplateHaskell,
     Rank2Types,
     PatternSynonyms,
     ViewPatterns,
     NoImplicitPrelude
  exposed-modules:
     QFeldspar.InferenceMonad,
     QFeldspar.ChangeMonad,
     QFeldspar.Simplify,
     QFeldspar.Inference,
     QFeldspar.QDSL,
     QFeldspar.Singleton,
     QFeldspar.Normalisation,
     QFeldspar.TypeChecking,
     QFeldspar.MyPrelude,
     QFeldspar.CSE,
     QFeldspar.Existential,
     QFeldspar.Solver,
     QFeldspar.Conversion,
     QFeldspar.CDSL,
     QFeldspar.Compiler,
     QFeldspar.ErrorMonad,
     QFeldspar.Type.Herbrand,
     QFeldspar.Type.Feldspar.GADT,
     QFeldspar.Type.Feldspar.Conversion,
     QFeldspar.Type.Feldspar.ADT,
     QFeldspar.TypeChecking.Feldspar,
     QFeldspar.Expression.Feldspar.GADTHigherOrder,
     QFeldspar.Expression.Feldspar.GADTValue,
     QFeldspar.Expression.Feldspar.ADTValue,
     QFeldspar.Expression.Feldspar.C,
     QFeldspar.Expression.Feldspar.GADTFirstOrder,
     QFeldspar.Expression.Feldspar.ADTUntypedNamed,
     QFeldspar.Expression.Feldspar.MiniFeldspar,
     QFeldspar.Expression.Feldspar.ADTUntypedDebruijn,
     QFeldspar.Expression.Feldspar.Conversion,
     QFeldspar.Expression.Feldspar.GADTTyped,
     QFeldspar.Expression.Feldspar.Conversions.Unquoting,
     QFeldspar.Expression.Feldspar.Conversions.TypeWithnessing,
     QFeldspar.Expression.Feldspar.Conversions.Normalisation,
     QFeldspar.Expression.Feldspar.Conversions.Lifting,
     QFeldspar.Expression.Feldspar.Conversions.TypeInference,
     QFeldspar.Expression.Feldspar.Conversions.CodeGeneration,
     QFeldspar.Expression.Feldspar.Conversions.ScopeWithnessing,
     QFeldspar.Expression.Feldspar.Conversions.NameResolution,
     QFeldspar.Expression.Feldspar.Conversions.Evaluation.GADTHigherOrder,
     QFeldspar.Expression.Feldspar.Conversions.Evaluation.ADTValue,
     QFeldspar.Expression.Feldspar.Conversions.Evaluation.GADTFirstOrder,
     QFeldspar.Expression.Feldspar.Conversions.Evaluation.ADTUntypedNamed,
     QFeldspar.Expression.Feldspar.Conversions.Evaluation.MiniFeldspar,
     QFeldspar.Expression.Feldspar.Conversions.Evaluation.ADTUntypedDebruijn,
     QFeldspar.Expression.Feldspar.Conversions.Evaluation.GADTTyped,
     QFeldspar.Expression.TemplateHaskell.Conversion,
     QFeldspar.Nat.TH,
     QFeldspar.Nat.GADT,
     QFeldspar.Nat.Conversion,
     QFeldspar.Nat.ADT,
     QFeldspar.Variable.Typed,
     QFeldspar.Variable.Plain,
     QFeldspar.Variable.Scoped,
     QFeldspar.Variable.Conversion,
     QFeldspar.Environment.Typed,
     QFeldspar.Environment.Map,
     QFeldspar.Environment.Plain,
     QFeldspar.Environment.Scoped,
     QFeldspar.Environment.Conversion,
     QFeldspar.Prelude.MiniFeldspar,
     QFeldspar.Prelude.Environment,
     QFeldspar.Prelude.TemplateHaskell,
     QFeldspar.Normalisation.Feldspar.GADTHigherOrder,
     QFeldspar.Normalisation.Feldspar.MiniFeldspar
  other-modules:
     Experiment.GenExperiment,
     Experiment.Process,
     Experiment.CSV,
     Experiment.Common,
     Examples.IPGray.QDSL,
     Examples.IPGray.CDSL,
     Examples.IPBW.QDSL,
     Examples.IPBW.CDSL,
     Examples.CRC.QDSL,
     Examples.CRC.CDSL,
     Examples.Power.QDSL,
     Examples.Power.Haskell,
     Examples.Power.CDSL,
     Examples.FFT.QDSL,
     Examples.FFT.CDSL,
     Examples.Windowing.QDSL,
     Examples.Windowing.CDSL,
     Tests.GADTHigherOrder,
     Tests.GADTFirstOrder,
     Tests.ADTUntypedNamed,
     Tests.MiniFeldspar,
     Tests.ADTUntypedDebruijn,
     Tests.Conversion,
     Tests.GADTTyped,
     Tests.TemplateHaskell,
     Tests.Examples,
     Tests.CompareExamples,
     Test
  build-depends:
     base             >=4.7 && <4.8,
     array            >=0.5 && <0.6,
     mtl              >=2.1 && <2.3,
     template-haskell >=2.9 && <2.10,
     pretty           >=1.1 && <1.2,
     constraints      >=0.4 && <0.5,
     directory        >=1.2 && <1.3,
     deepseq          >=1.3 && <1.4
  default-language:    Haskell2010